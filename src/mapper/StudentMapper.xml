<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yjj.mapper.StudentMapper">

	<!-- 直接通过map或者javabean插入数据 -->
	<!-- 
	useGeneratedKeys="true"表明使用数据库自动生成主键。
	keyProperty="id"指定Student表中主键列 keyProperty="id"
	表明当插入记录后，会把数据库生成的主键值设置到Student对象的id属
	性中，也就是说，它指定与Student表中的主键列，对应的，Student实
	体类中的属性是id这个属性
	-->
	<insert id="add" useGeneratedKeys="true" keyColumn="id"  
	keyProperty="id" parameterType="student">
		insert into student(name,gender,major,grade)
		 values(#{name},#{gender},#{major},#{grade})
	</insert>
	
	<delete id="delById" parameterType="int">
		delete from student where id = #{id}
	</delete>
	
	<!-- 学生实体的属性与学生表列名的映射 -->
	<resultMap type="student" id="studentResultMap">
		<id property="id" column="id"/>
		<result property="name"  column="name"/>
		<result property="gender" column="gender"/>
		<result property="major" column="major"/>
		<result property="grade" column="grade"/>
	</resultMap>
	
	
	<!-- 根据学生的id查询学生对象 -->
	<select id="getById" parameterType="int" 
		resultMap="studentResultMap">
		select id,name,gender,major,grade from student where id = #{id}
	</select>
	
	<!-- 查询所有学生 -->
	<select id="getAll" parameterType="int"
		resultMap="studentResultMap">
		select id,name,gender,major,grade from student
	</select>
	
	<!-- 根据id修改学生的相关信息 -->
	<update id="update" parameterType="student">
		update student set name=#{name},
		gender=#{gender},
		major=#{major},
		grade=#{grade}
		where id=#{id}
	</update>

</mapper>